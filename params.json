{"name":"Devfest Environment Setup","tagline":"How to set up your Programming Environment","body":"# Devfest Environment Setup\r\n\r\n### Motivation\r\n\r\nDuring Devfest this year, we will be using a piece of software called\r\nVagrant for our development.  Vagrant allows users to really easily manage\r\nVirtual Machines, which are basically operating systems running on top of your\r\ncurrent operating system, which we can use for our own software development.\r\n\r\nWriting code on a virtual machine has a number of advantages over doing so\r\nlocally on your computer.  Most importantly, installing software for development\r\nis often one of the most frustrating things about getting started.  We have\r\nprovisioned a virtual machine with all the software you need--so that regardless\r\nof whether you run a PC or a Mac, you can be up and running as soon as you have\r\nVagrant installed.\r\n\r\n### Opening up Terminal (Mac only)\r\n\r\nTerminal is going to be where most of our development-related software will\r\nbe running.  Simply use Spotlight to open it up\r\n\r\n![terminal open](https://raw2.github.com/squidarth/environment-setup/master/static/open_terminal.png)\r\n\r\n### Installing Git\r\n\r\nGit is necessary on both Mac and PC to get environments set up.  First, check\r\nif it has been installed already by loading up Terminal and typing\r\n`git`, followed by hitting ENTER.\r\nIf git is installed, you should see the following output:\r\n\r\n![git output](https://raw2.github.com/squidarth/environment-setup/master/static/git_output_success-3.png)\r\n\r\nIf not, install git from the [git website](http://git-scm.com/downloads), where\r\nthere are more instructions.\r\n\r\n### Installing VirtualBox\r\n\r\nTo make development simpler, we will be doing our development in a Virtual Machine.\r\nThe simplest way to do this is by using a piece of software called [vagrant](http://vagrantup.com).\r\nThe first dependency for Vagrant is VirtualBox. To install this, visit [the VirtualBox website](https://www.virtualbox.org/wiki/Downloads)\r\nand download the version for your operating system.\r\n\r\n![virtualbox page](https://raw2.github.com/squidarth/environment-setup/master/static/virtualbox_downloads-2.png).\r\n\r\nSimply go through the installer until it's finished.\r\n\r\n![virtualbox installer](https://raw2.github.com/squidarth/environment-setup/master/static/virtualbox_installer-2.png)\r\n\r\n### Installing Vagrant\r\n\r\nNext, we need to install Vagrant, which is an easy way to manage VirtualBox\r\nVirutal Machines.  To do this, visit the [Vagrant website](http://www.vagrantup.com/downloads.html)\r\nand install the appropriate version for your Operating System.\r\n\r\n![vagrant website](https://raw2.github.com/squidarth/environment-setup/master/static/vagrant_downloads-2.png)\r\n\r\nOnce it has been installed, load up your terminal again and type `vagrant`.\r\n\r\nYou should see the following output:\r\n\r\n![vagrant output](https://raw2.github.com/squidarth/environment-setup/master/static/vagrant_output-2.png)\r\n\r\nIf you see this, then you're ready to start developing!\r\n\r\n### Basic Terminal Use\r\n\r\nThe next couple steps will require knowing a few terminal commands.  The terminal\r\nis often called the \"Command Line\", and we'll be using that terminology for the\r\nrest of this short guide.  In order to execute commands in the command line (which\r\nyou have already done a couple times), type the command and then hit \"enter\".\r\n\r\nWhen you are using the command line, you are always in a certain directory.  To\r\ncheck the directory you are in, simply run `pwd`.\r\n\r\n![pwd usage](https://raw2.github.com/squidarth/environment-setup/master/static/pwd_usage-2.png)\r\n\r\nTo list all the files in the current directory you are in, type the command `ls` (list).\r\n\r\n![ls usage](https://raw2.github.com/squidarth/environment-setup/master/static/ls_usage-2.png)\r\n\r\nTo change directories, type the `cd` command, followed by the name of the directory\r\nthat you would like to navigate to.  Note that `~` is the name of your home\r\ndirectory (the directory where your Documents directory is).\r\n\r\n![cd usage](https://raw2.github.com/squidarth/environment-setup/master/static/cd_usage-2.png)\r\n\r\n\r\n### Getting started with Vagrant\r\n\r\nNow you should be ready to get started using Vagrant to do some web development.\r\n\r\nFirst, navigate to a directory where you would like to start writing code.\r\n\r\n![move to devfest](https://raw2.github.com/squidarth/environment-setup/master/static/move_to_devfest-2.png)\r\n\r\nThen, type the command  `git clone https://github.com/adicu/flask_test.git`\r\n\r\n![git clone usage](https://raw2.github.com/squidarth/environment-setup/master/static/git_clone_usage-2.png)\r\n\r\nWhat this does is create a directory in the current folder you are in called\r\n\"flask_test\", and uses Git, which we installed earlier, to load into that project\r\na sample project that we have prepared for you.\r\n\r\nTo start the virtual machine for this project, first move to the \"flask_test\"\r\ndirectory, and run the command `vagrant up`.\r\n\r\n![vagrant up](https://raw2.github.com/squidarth/environment-setup/master/static/vagrant_up-2.png)\r\n\r\nOnce this command finishes executing (it will take a couple minutes), your\r\nvirtual machine will be ready to use.  To access the machine, use the command\r\n\r\n`vagrant ssh`.  Once this command has finished executing, you will be inside\r\na virtual machine different from your own machine. To return to your local machine,\r\nsimply type the command `exit`.\r\n\r\nThe special thing about Vagrant is that you have access inside the Virtual\r\nMachine to files on your local computer.  Once inside the Virtual Machine,\r\ntype\r\n\r\n`cd /vagrant`, followed by `ls`, and you'll see that the files in the \"flask_test\"\r\nfolder on your computer are available on this virtual machine.  To prove to yourself\r\nthat everything is working, type `python src/application.py`, and open up your\r\nbrowser to [http://localhost:5000](http://localhost:5000/).\r\n\r\nThis is all demonstrated here:\r\n\r\n![vagrant ssh](https://raw2.github.com/squidarth/environment-setup/master/static/vagrant_ssh-2.png)\r\n\r\nA couple other important commands to note are `vagrant halt` and `vagrant reload`.\r\n`vagrant halt` stops the Virtual Machine, while `vagrant halt` restarts it.  These\r\ncommands should be your first line of defense if anything seems to be going wrong.\r\n\r\n### Remarks on Vagrant Usage (Optional)\r\n\r\nCongratulations, you now have Vagrant set up successfully!  In this section,\r\nI'd just like to note a couple things about using Vagrant.\r\n\r\nFirst of all, even though when you are connected to your Vagrant box (what happens after\r\ntyping `vagrant ssh`), you are on a Virtual Machine, the files in the `/vagrant`\r\nfolder are actually the same files on your Mac or PC.  This means that you can\r\nedit those files in any text editor you like, and the changes will immediately\r\nbe reflected in Vagrant.\r\n\r\nSecond, there are a couple important files in the `flask_test` folder that you\r\nshould be aware of.  First is the file called `Vagrantfile`.  This file specifies\r\nthe configuration of Vagrant box.  If you would like to use Vagrant in a different\r\nproject, you can copy this file over to that directory, and then type `vagrant up`\r\nin that directory to get started using Vagrant with that new project.\r\n\r\nThe other file to be aware of is the file called `boostrap.sh`.  This file is\r\na script that provisions the Vagrant box with software needed to start developing\r\nweb applications in Python using the Flask framework.  If you are starting another\r\nsimilar project, copy this file to your new project folder as well.\r\n\r\n### Common Gotchas\r\n\r\nUnfortunately, some people do run into some minor problems with Vagrant.  By\r\nfar the most common problem is the command `vagrant up` or `vagrant halt` hanging and running forever.\r\nThis usually happens after somebody has put their computer to sleep and has\r\nstarted the computer again. This can be easily remedied through the following\r\ncouple steps:\r\n\r\n`Ctrl-C` to get the current commmand to stop.  Then, type `vagrant suspend` to\r\nstop the box.  After this, you should be able to type `vagrant reload` to get\r\nthe box working again.\r\n\r\nThe initial `vagrant up` command might take a while because it needs to download\r\na ~200mb file from the web.  Subsequent `vagrant up`s will not take nearly as\r\nlong.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}